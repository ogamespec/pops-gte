DPCS: Depth cue single

Intref.pdf:

DPCS Required cycles: 8

Function: Depth queuing

Calculations:
(1.27.16)   RR0 = OVF_1 ( R*1.0 + IR0 * LIM_A1S(RFC-R*1.0) )
(1.27.16)   GG0 = OVF_2 ( G*1.0 + IR0 * LIM_A2S(GFC-G*1.0) )
(1.27.16)   BB0 = OVF_3 ( B*1.0 + IR0 * LIM_A3S(BFC-B*1.0) )
(1.11. 4)   IR1 = LIM_A1S(RR0);
(1.11. 4)   IR2 = LIM_A2S(GG0);
(1.11. 4)   IR3 = LIM_A3S(BB0);
(-.8.-)     CD0 <- CD1 <- CD2 <- CODE
(0. 8. 0)   R0 <- R1 <- R2 <- LIM_B1(RR0);
(0. 8. 0)   G0 <- G1 <- G2 <- LIM_B2(GG0);
(0. 8. 0)   B0 <- B1 <- B2 <- LIM_B3(BB0);
(1.27. 4)   MAC1 = RR0;
(1.27. 4)   MAC2 = GG0;
(1.27. 4)   MAC3 = BB0;

Pops:

VFPU 4:
        [0x100f] [0x20f] [-8f] [7.999756f]
        [0x80f]  [0x10f] [-8f] [7.999756f]
        [0x40f]  [0x08f] [-8f] [7.999756f]
        [0]      [0]     [0]   [0]

2:
    [IR0] [] [] [LB3]
    []    [] [] [RFC]
    []    [] [] [GFC]
    []    [] [] [BFC]

    a0 = RGB

0:
    [F RFC / 2^12] [] [] []
    [F GFC / 2^12] [] [] []
    [F BFC / 2^12] [] [] []
    []             [] [] []

    v0 = R
    a1 = G
    a2 = B

0:
    [F RFC / 2^12] [F R / 2^8] [] []
    [F GFC / 2^12] [F G / 2^8] [] []
    [F BFC / 2^12] [F B / 2^8] [] []
    [] [] [] []

2:
    [F IR0 / 2^12] [] [] [LB3]
    []             [] [] [RFC]
    []             [] [] [GFC]
    []             [] [] [BFC]

*

0:
    [F RFC / 2^12 - F R / 2^8] [F R / 2^8] [] []
    [F GFC / 2^12 - F G / 2^8] [F G / 2^8] [] []
    [F BFC / 2^12 - F B / 2^8] [F B / 2^8] [] []
    []                         [] [] []

7:
    [] [ min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f) ] [] []
    [] [ min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f) ] [] []
    [] [ min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f) ] [] []
    [] []        [] []

    LimRFC = CC[0] = 7.999756f <= | F RFC / 2^12 - F R / 2^8 |
    LimGFC = CC[1] = 7.999756f <= | F GFC / 2^12 - F G / 2^8 |
    LimBFC = CC[2] = 7.999756f <= | F BFC / 2^12 - F B / 2^8 |

3:
    [] [] [] [CC[0] ? 0x100f: 0]
    [] [] [] [CC[1] ? 0x80f : 0]
    [] [] [] [CC[2] ? 0x40f : 0]
    [] [] [] []

7:
    [] [ F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f) ] [] []
    [] [ F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f) ] [] []
    [] [ F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f) ] [] []
    [] []        [] []

    a0 = (u32)RGB >> 1

0:
    [F RFC / 2^12 - F R / 2^8] [F R / 2^8] [] []
    [F GFC / 2^12 - F G / 2^8] [F G / 2^8] [] []
    [F BFC / 2^12 - F B / 2^8] [F B / 2^8] [] []
    []                         [] []          [RGB >> 1]

2:
    [F RR0 = F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f)  + F R / 2^8] [] [] [LB3]
    [F GG0 = F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f)  + F G / 2^8] [] [] [RFC]
    [F BB0 = F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f)  + F B / 2^8] [] [] [GFC]
    [] [] [] [BFC]

*

    [F RFC / 2^12 - F R / 2^8] [F R / 2^8] [] [ F R / 2^8 +  CLAMP (F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f), 0, 1)  ]
    [F GFC / 2^12 - F G / 2^8] [F G / 2^8] [] [ F G / 2^8 +  CLAMP (F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f), 0, 1)  ]
    [F BFC / 2^12 - F B / 2^8] [F B / 2^8] [] [ F B / 2^8 +  CLAMP (F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f), 0, 1)  ]
    []                         [] []          [RGB >> 1]

2:
    [F RR0 = F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f)  + F R / 2^8] [ min (max(RR0, -8), 7.999756f) ] [] [LB3]
    [F GG0 = F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f)  + F G / 2^8] [ min (max(GG0, -8), 7.999756f) ] [] [RFC]
    [F BB0 = F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f)  + F B / 2^8] [ min (max(BB0, -8), 7.999756f) ] [] [GFC]
    [] [] [] [BFC]

    CC[0] = 7.999756f <= | RR0 |
    CC[1] = 7.999756f <= | GG0 |
    CC[2] = 7.999756f <= | BB0 |

3:
    [] [] [] [CC[0] ? 0x100f: LimRFC ]
    [] [] [] [CC[1] ? 0x80f : LimGFC ]
    [] [] [] [CC[2] ? 0x40f : LimFFC ]
    [] [] [] []

0:
    [] [I RR0 * 2^12] [] [ F C_RR0 = CLAMP (F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f), 0 , 1)  + F R / 2^8]
    [] [I GG0 * 2^12] [] [ F C_GG0 = CLAMP (F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f), 0 , 1)  + F G / 2^8]
    [] [I BB0 * 2^12] [] [ F C_BB0 = CLAMP (F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f), 0 , 1)  + F B / 2^8]
    [] [] [] [RGB >> 1]

2:
    [F RR0 = F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f)  + F R / 2^8] [ I min (max(RR0, -8), 7.999756f) * 2^12 ] [] [LB3]
    [F GG0 = F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f)  + F G / 2^8] [ I min (max(GG0, -8), 7.999756f) * 2^12 ] [] [RFC]
    [F BB0 = F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f)  + F B / 2^8] [ I min (max(BB0, -8), 7.999756f) * 2^12 ] [] [GFC]
    [] [] [] [BFC]

*

    MAC1 = I RR0 * 2^12
    MAC2 = I GG0 * 2^12
    MAC3 = I BB0 * 2^12

    CC[0] = RR0 != C_RR0
    CC[1] = GG0 != C_GG0
    CC[2] = BB0 != C_BB0

7:
    [] [ F IR0 / 2^12  *  min (max(F RFC / 2^12 - F R / 2^8, -8), 7.999756f) ] [RGB0] []
    [] [ F IR0 / 2^12  *  min (max(F GFC / 2^12 - F G / 2^8, -8), 7.999756f) ] [RGB1] []
    [] [ F IR0 / 2^12  *  min (max(F BFC / 2^12 - F B / 2^8, -8), 7.999756f) ] [RGB2] []
    [] []                                                                      [RES1] []

    IR1 = I min (max(RR0, -8), 7.999756f) * 2^12
    IR2 = I min (max(GG0, -8), 7.999756f) * 2^12
    IR3 = I min (max(BB0, -8), 7.999756f) * 2^12

0:
    [] [I RR0 * 2^12] [] [ I C_RR0 * 2^31 ]
    [] [I GG0 * 2^12] [] [ I C_GG0 * 2^31 ]
    [] [I BB0 * 2^12] [] [ I C_BB0 * 2^31 ]
    [] [] [] [RGB >> 1]

3:
    [] [] [] [ BB1 = RR0 != C_RR0 ? 0x20f : 0 ]
    [] [] [] [ BB2 = GG0 != C_GG0 ? 0x10f : 0 ]
    [] [] [] [ BB3 = BB0 != C_BB0 ?  0x8f : 0 ]
    [] [AA1 + AA2 + AA3] [AA1 + AA2 + AA3] [AA1 + AA2 + AA3]

    S330 = AA1 + AA2 + AA3 + BB1 + BB2 + BB3;

7:
    rgb = [RGB >> 1][I C_BB0 * 2^31][I C_GG0 * 2^31][I C_RR0 * 2^31]

    []    []    [RGB0] []
    []    []    [RGB1] []
    [rgb] [rgb] [rgb]  [rgb]
    []    []    [RES1] []
    

RAW:


    0x0000D37C: 0xDB8B00D0 '....' - lv.q       C230, 208($gp)       // LB3 ... RFC GFC BFC
    0x0000D380: 0xCB880020 ' ...' - lv.s       S200, 32($gp)        // IR0
    0x0000D384: 0x8F840018 '....' - lw         $a0, 24($gp)         // RGB
    0x0000D388: 0xD28CCB00 '....' - vi2f.t     C000, C231, 12
    0x0000D38C: 0x7C823800 '.8.|' - ext        $v0, $a0, 0, 8
    0x0000D390: 0x7C853A00 '.:.|' - ext        $a1, $a0, 8, 8
    0x0000D394: 0x7C863C00 '.<.|' - ext        $a2, $a0, 16, 8
    0x0000D398: 0x48E20001 '...H' - mtv        $v0, S010
    0x0000D39C: 0x48E50021 '!..H' - mtv        $a1, S011
    0x0000D3A0: 0x48E60041 'A..H' - mtv        $a2, S012
    0x0000D3A4: 0xD2888101 '....' - vi2f.t     C010, C010, 8
    0x0000D3A8: 0xD28C0808 '....' - vi2f.s     S200, S200, 12
*
    0x0000D3AC: 0x60818000 '...`' - vsub.t     C000, C000, C010
    0x0000D3B0: 0xD006800F '....' - vzero.t    C330
    0x0000D3B4: 0x6D92801D '...m' - vmax.t     C710, C000, C420
    0x0000D3B8: 0xDD0007E4 '....' - vpfxt      [|x|, |y|, |z|, w]
    0x0000D3BC: 0x6C009303 '...l' - vcmp.t     LE, C430, C000
    0x0000D3C0: 0x6D139D1D '...m' - vmin.t     C710, C710, C430
    0x0000D3C4: 0xD2A6900F '....' - vcmovt.t   C330, C400, 6
    0x0000D3C8: 0x65089D1D '...e' - vscl.t     C710, C710, S200     // Scale triple
    0x0000D3CC: 0x00042042 'B ..' - srl        $a0, $a0, 1
    0x0000D3D0: 0x48E40063 'c..H' - mtv        $a0, S033
    0x0000D3D4: 0x60019D08 '...`' - vadd.t     C200, C710, C010
*
    0x0000D3D8: 0xDE000815 '....' - vpfxd      [[0:1], [0:1], [0:1], m]
    0x0000D3DC: 0x60019D03 '...`' - vadd.t     C030, C710, C010
    0x0000D3E0: 0x6D928809 '...m' - vmax.t     C210, C200, C420
    0x0000D3E4: 0xDD0007E4 '....' - vpfxt      [|x|, |y|, |z|, w]
    0x0000D3E8: 0x6C089303 '...l' - vcmp.t     LE, C430, C200
    0x0000D3EC: 0x6D138909 '...m' - vmin.t     C210, C210, C430
    0x0000D3F0: 0xD2A6900F '....' - vcmovt.t   C330, C400, 6
    0x0000D3F4: 0xD20C8801 '....' - vf2in.t    C010, C200, 12
    0x0000D3F8: 0xD20C8909 '....' - vf2in.t    C210, C210, 12
*
    0x0000D3FC: 0xF7810066 'f...' - svr.q      C010, 100($gp)       // MAC0 ... MACX
    0x0000D400: 0x6C038805 '...l' - vcmp.t     NE, C200, C030
    0x0000D404: 0xDB9E0050 'P...' - lv.q       C720, 80($gp)        // RGB0 ...
    0x0000D408: 0xF7890026 '&...' - svr.q      C210, 36($gp)        // IR1 ...
    0x0000D40C: 0xD21F8303 '....' - vf2in.t    C030, C030, 31
    0x0000D410: 0xD0468F6F 'o.F.' - vfad.t     R313, C330
    0x0000D414: 0xD006800F '....' - vzero.t    C330
    0x0000D418: 0xD2A6910F '....' - vcmovt.t   C330, C410, 6
    0x0000D41C: 0xD0468F8F '..F.' - vfad.q     C330, C330
    0x0000D420: 0xD03C83FE '..<.' - vi2uc.q    R702, C030
    0x0000D424: 0xF79E0058 'X...' - svl.q      C720, 88($gp)        // RGBX
    0x0000D428: 0x03E00008 '....' - jr         $ra
    0x0000D42C: 0xD2700F0F '..p.' - vf2id.s    S330, S330, 16

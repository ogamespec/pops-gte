
OP sf   Required cycles: 6

Function: Outer product

Items specified using arguments:

||Argument ||Specified content ||Value=0 ||Value=1||
||sf ||Output format ||--|| Performs calculations on data<br>shifted 12 bits to the left in the<br>IRn register.||

Calculations: (m and n specify the data format of IRp(p=1,2,3) as (1.m.n).)

sf == 0     sf == 1
(1.m+28.n)  (1.m+16.n+12)   OPX = DY1(R22)*DZ2(IR3)
                                  - DZ1(R33)*DY2(IR2); <1>
(1.m+28.n)  (1.m+16.n+12)   OPY = DZ1(R33)*DX2(IR1)
                                  - DX1(R11)*DZ2(IR3); <2>
(1.m+28.n)  (1.m+16.n+12)   OPZ = DX1(R11)*DY2(IR2)
                                  - DY1(R22)*DX2(IR1); <3>
(1.m.n)     (1.m.n)         IR1 = limA1S(OPX);
(1.m.n)     (1.m.n)         IR2 = limA2S(OPY);
(1.m.n)     (1.m.n)         IR3 = limA3S(OPZ);
(1.m+16.n)  (1.m+16.n)      MAC1 = OPX;
(1.m+16.n)  (1.m+16.n)      MAC2 = OPY;
(1.m+16.n)  (1.m+16.n)      MAC3 = OPZ;


Pcsx:

    gteFLAG = 0;
    
    if (psxRegs.code  & 0x80000) {
        gteMAC1 = FNC_OVERFLOW1((gteD2 * gteIR3 - gteD3 * gteIR2) >> 12);
        gteMAC2 = FNC_OVERFLOW2((gteD3 * gteIR1 - gteD1 * gteIR3) >> 12);
            gteMAC3 = FNC_OVERFLOW3((gteD1 * gteIR2 - gteD2 * gteIR1) >> 12);
    } else {
        gteMAC1 = FNC_OVERFLOW1(gteD2 * gteIR3 - gteD3 * gteIR2);
        gteMAC2 = FNC_OVERFLOW2(gteD3 * gteIR1 - gteD1 * gteIR3);
            gteMAC3 = FNC_OVERFLOW3(gteD1 * gteIR2 - gteD2 * gteIR1);
    }

    MAC2IR();

    SUM_FLAG


Pops:

    a1 // int shift = ((psxRegs.code >> 19) & 1) * 12;

    t3 = gteD1
    t1 = gteIR2
    t4 = gteD2
    t0 = gteIR1
    Acc = gteD1 * gteIR2
    a2 = 32767
    t6 = -32768
    Acc -= gteD2 * gteIR1
    t2 = gteIR3
    t5 = gteD3
    t8 = gteD1 * gteIR2 - gteD2 * gteIR1
    Acc = gteD2 * gteIR3
    t8 = (gteD1 * gteIR2 - gteD2 * gteIR1) >> shift
    gteMAC3 = t8

    Acc -= gteD3 * gteIR2
    a3 = max (gteMAC3, -32768)
    a3 = min (a3, 32767)
    t8 = gteMAC3 - gteIR3
    at = 0 < t8
    at <<= 22
    gteIR3 = a3
*

    t8 = gteD2 * gteIR3 - gteD3 * gteIR2
    Acc = gteD3 * gteIR1
    t8 = t8 >> shift
    gteMAC1 = t8
    Acc -= gteD1 * gteIR3
    a3 = max (gteMAC1, -32768)
    a3 = min (a3, 32767)
    t8 = gteMAC1 - gteIR1
    t8 = 0 < t8
    at |= t8 << 24
    gteIR1 = a3

*

    аналогично для gteMAC2

Си:

{
    int shift = ((psxRegs.code >> 19) & 1) * 12;

    gteMAC1 = (gteD2 * gteIR3 - gteD3 * gteIR2) >> shift;
    gteMAC2 = (gteD3 * gteIR1 - gteD1 * gteIR3) >> shift;
    gteMAC3 = (gteD1 * gteIR2 - gteD2 * gteIR1) >> shift;

    gteIR1 = min ( max (gteMAC1, -32768), 32767 );
    gteFLAG = ( (gteMAC1 - gteIR1) != 0 ) << 24;
    gteIR2 = min ( max (gteMAC2, -32768), 32767 );
    gteFLAG |= ( (gteMAC2 - gteIR2) != 0 ) << 23;
    gteIR3 = min ( max (gteMAC3, -32768), 32767 );
    gteFLAG |= ( (gteMAC3 - gteIR3) != 0 ) << 22;
}

    


OP:

    0x00000FE4: 0x7C8504C0 '...|' - ext        $a1, $a0, 19, 1
    0x00000FE8: 0x00051840 '@...' - sll        $v1, $a1, 1
    0x00000FEC: 0x00652021 '! e.' - addu       $a0, $v1, $a1
    0x00000FF0: 0x27BDFFF0 '...'' - addiu      $sp, $sp, -16
    0x00000FF4: 0x00042880 '.(..' - sll        $a1, $a0, 2
    0x00000FF8: 0xAFBF0000 '....' - sw         $ra, 0($sp)
    0x00000FFC: 0x0C003AB6 '.:..' - jal        sub_0000EAD8
    0x00001000: 0x00002021 '! ..' - move       $a0, $zr
    0x00001004: 0x8FBF0000 '....' - lw         $ra, 0($sp)
    0x00001008: 0x03E00008 '....' - jr         $ra
    0x0000100C: 0x27BD0010 '...'' - addiu      $sp, $sp, 16


sub_0000EAD8:       ; Refs: 0x00000FFC 
    0x0000EAD8: 0x878B0080 '....' - lh         $t3, 128($gp)    // gteD1
    0x0000EADC: 0x8F890028 '(...' - lw         $t1, 40($gp)     // gteIR2
    0x0000EAE0: 0x878C0088 '....' - lh         $t4, 136($gp)    // gteD2
    0x0000EAE4: 0x8F880024 '$...' - lw         $t0, 36($gp)     // gteIR1
    0x0000EAE8: 0x01690018 '..i.' - mult       $t3, $t1
    0x0000EAEC: 0x24067FFF '...$' - li         $a2, 32767
    0x0000EAF0: 0x240E8000 '...$' - li         $t6, -32768
    0x0000EAF4: 0x0188002E '....' - msub       $t4, $t0
    0x0000EAF8: 0x8F8A002C ',...' - lw         $t2, 44($gp)     // gteIR3
    0x0000EAFC: 0x878D0090 '....' - lh         $t5, 144($gp)    // gteD3
    0x0000EB00: 0x0000C012 '....' - mflo       $t8
    0x0000EB04: 0x018A0018 '....' - mult       $t4, $t2
    0x0000EB08: 0x00B8C007 '....' - srav       $t8, $t8, $a1
    0x0000EB0C: 0xAF98006C 'l...' - sw         $t8, 108($gp)    // gteMAC3

    0x0000EB10: 0x01A9002E '....' - msub       $t5, $t1
    0x0000EB14: 0x030E382C ',8..' - max        $a3, $t8, $t6
    0x0000EB18: 0x00E6382D '-8..' - min        $a3, $a3, $a2
    0x0000EB1C: 0x0307C023 '#...' - subu       $t8, $t8, $a3
    0x0000EB20: 0x0018082B '+...' - sltu       $at, $zr, $t8
    0x0000EB24: 0x00010D80 '....' - sll        $at, $at, 22
    0x0000EB28: 0xAF87002C ',...' - sw         $a3, 44($gp)     // gteIR3
*
    0x0000EB2C: 0x0000C012 '....' - mflo       $t8
    0x0000EB30: 0x01A80018 '....' - mult       $t5, $t0
    0x0000EB34: 0x00B8C007 '....' - srav       $t8, $t8, $a1
    0x0000EB38: 0xAF980064 'd...' - sw         $t8, 100($gp)    // gteMAC1
    0x0000EB3C: 0x016A002E '..j.' - msub       $t3, $t2
    0x0000EB40: 0x030E382C ',8..' - max        $a3, $t8, $t6
    0x0000EB44: 0x00E6382D '-8..' - min        $a3, $a3, $a2
    0x0000EB48: 0x0307C023 '#...' - subu       $t8, $t8, $a3
    0x0000EB4C: 0x0018C02B '+...' - sltu       $t8, $zr, $t8
    0x0000EB50: 0x7F01C604 '....' - ins        $at, $t8, 24, 1
    0x0000EB54: 0xAF870024 '$...' - sw         $a3, 36($gp)     // gteIR1
*
    0x0000EB58: 0x0000C012 '....' - mflo       $t8
    0x0000EB5C: 0x00B8C007 '....' - srav       $t8, $t8, $a1
    0x0000EB60: 0xAF980068 'h...' - sw         $t8, 104($gp)    // gteMAC2
    0x0000EB64: 0x030E382C ',8..' - max        $a3, $t8, $t6
    0x0000EB68: 0x00E6382D '-8..' - min        $a3, $a3, $a2
    0x0000EB6C: 0x0307C023 '#...' - subu       $t8, $t8, $a3
    0x0000EB70: 0x0018C02B '+...' - sltu       $t8, $zr, $t8
    0x0000EB74: 0x7F01BDC4 '....' - ins        $at, $t8, 23, 1
    0x0000EB78: 0xAF870028 '(...' - sw         $a3, 40($gp)     // gteIR2
    0x0000EB7C: 0x03E00008 '....' - jr         $ra
    0x0000EB80: 0x48E1000F '...H' - mtv        $at, S330